openapi: 3.0.1
info:
  title: Reporter API
  description: This is a reporting API for web applications.
  contact:
    email: d.wenzel@familie-redlich.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: ///v0
tags:
- name: application
  description: About the application
  externalDocs:
    description: Find out more
    url: http://reporter.docs.famile-redlich.de
paths:
  /application/report:
    get:
      tags:
      - report
      summary: Get the application status report
      description: Multiple status values can be provided with comma separated strings
      operationId: getApplicationReport
      parameters:
      - name: api_key
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        400:
          description: Invalid status value
          content: {}
components:
  schemas:
    Report:
      required:
      - name
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: fr/dena-de-bundle
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: application status
          enum:
          - ok
          - error
          - warning
        components:
          type: array
          description: Installed packages
          items:
            $ref: '#/components/schemas/Component'
        repositories:
          type: array
          description: Repositories for components
          items:
            $ref: '#/components/schemas/Repository'
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Component:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
    Package:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        type:
          type: string
        source:
          $ref: '#/components/schemas/PackageSource'
    PackageSource:
      type: array
      properties:
        url:
          type: string
        type:
          type: string
        reference:
          type: string
    Repository:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
        package:
          $ref: '#/components/schemas/Package'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
